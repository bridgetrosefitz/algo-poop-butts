const _ = require('lodash');

// Pseudocode

// For each letter
// currentLetter
// destinationLetter
// DONE Which sub array is destinationLetter in?
// DONE Which index is letter at in subarray
// Return difference between current subarray and desination sub array
// Return difference between current index in horizontal array  

function calculateWordJourney(board, word) {
  console.log(word)
  const setOfSteps = []
  let currentVerticalPosition = 0
  let currentHorizontalPosition = 0
  // for (const letter of word) {
  for (let letter of word) {
    // Find the index of subArray to search
    let indexOfSubArrayToSearch
    board.forEach((subArray, index) => {
      if (subArray.includes(letter)) {
        indexOfSubArrayToSearch = index
      } else return
    })

    // Find the index of the exact letter in the subArray
    const indexOfLetterInSubArray = board[indexOfSubArrayToSearch].indexOf(letter)
    // console.log('indexOfSubArrayToSearch', indexOfSubArrayToSearch)
    // console.log('indexOfLetterInSubArray', indexOfLetterInSubArray)

    // Calculate difference between current position and destination position

    let verticalMovementRequired
      if(indexOfSubArrayToSearch < currentVerticalPosition ) {
        verticalMovementRequired = indexOfSubArrayToSearch - currentVerticalPosition
      } else {
        verticalMovementRequired = indexOfSubArrayToSearch - currentVerticalPosition
        
      }
    let horizontalMovementRequired
      if(indexOfLetterInSubArray < currentHorizontalPosition) {
        horizontalMovementRequired = indexOfLetterInSubArray - 
        currentHorizontalPosition
      } else {
        horizontalMovementRequired = currentHorizontalPosition + indexOfLetterInSubArray
      }

    // Articulate the steps and add to array we're returning

    setOfSteps.push({
      vertical: verticalMovementRequired, 
      horizontal: horizontalMovementRequired
      })

      // Update current positions
      
      // console.log(letter)

      // console.log('currentVerticalPosition', currentVerticalPosition)
      // console.log('indexOfSubArrayToSearch', indexOfSubArrayToSearch)

      // console.log('currentHorizontalPosition', currentHorizontalPosition)
      // console.log('indexOfLetterInSubArray', indexOfLetterInSubArray)

      currentVerticalPosition = indexOfSubArrayToSearch
      currentHorizontalPosition = indexOfLetterInSubArray
      


    }

  return setOfSteps;
}

let testCase = 1;
const b1 = [
  ['a', 'b', 'c'],
  ['d', 'e', 'f'],
  ['g', 'h', 'i'],
  ['j', 'k', 'l'],
  ['m', 'n' , 'o'],
  ['p', 'q', 'r'],
  ['s', 't', 'u'],
  ['v', 'w', 'x'],
  ['y', 'z']
];

console.log(calculateWordJourney(b1, 'bad'))
console.log(calculateWordJourney(b1, 'dart'))
console.log(calculateWordJourney(b1, 'age'))

